{"version":3,"sources":["dummy/tests/acceptance/index-test.js","dummy/tests/acceptance/index-test.jscs-test.js","dummy/tests/acceptance/index-test.jshint.js","dummy/tests/app.jscs-test.js","dummy/tests/app.jshint.js","dummy/tests/components/customized-page.jscs-test.js","dummy/tests/components/customized-page.jshint.js","dummy/tests/components/index-page.jscs-test.js","dummy/tests/components/index-page.jshint.js","dummy/tests/controllers/customized.jscs-test.js","dummy/tests/controllers/customized.jshint.js","dummy/tests/controllers/index.jscs-test.js","dummy/tests/controllers/index.jshint.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/destroy-app.jscs-test.js","dummy/tests/helpers/destroy-app.jshint.js","dummy/tests/helpers/module-for-acceptance.js","dummy/tests/helpers/module-for-acceptance.jscs-test.js","dummy/tests/helpers/module-for-acceptance.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jscs-test.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jscs-test.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/integration/components/ember-anchor-test.js","dummy/tests/integration/components/ember-anchor-test.jscs-test.js","dummy/tests/integration/components/ember-anchor-test.jshint.js","dummy/tests/resolver.jscs-test.js","dummy/tests/resolver.jshint.js","dummy/tests/router.jscs-test.js","dummy/tests/router.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jscs-test.js","dummy/tests/test-helper.jshint.js","dummy/tests/unit/initializers/ember-anchor-test.js","dummy/tests/unit/initializers/ember-anchor-test.jscs-test.js","dummy/tests/unit/initializers/ember-anchor-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('dummy/tests/acceptance/index-test', ['exports', 'ember', 'qunit', 'dummy/tests/helpers/start-app'], function (exports, _ember, _qunit, _dummyTestsHelpersStartApp) {\n\n  var application = undefined;\n\n  (0, _qunit.module)('Acceptance | index', {\n    beforeEach: function beforeEach() {\n      application = (0, _dummyTestsHelpersStartApp['default'])();\n    },\n\n    afterEach: function afterEach() {\n      _ember['default'].run(application, 'destroy');\n    }\n  });\n\n  (0, _qunit.test)('visiting /', function (assert) {\n    visit('/');\n    andThen(function () {\n      assert.equal(currentURL(), '/');\n      assert.ok($('body').offset().top < 10, 'Body is scrolled to top');\n    });\n\n    click('.third-link');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/?anc=third');\n    });\n\n    click('.second-link');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/?anc=second');\n    });\n  });\n\n  (0, _qunit.test)('visiting /customized', function (assert) {\n    visit('/customized');\n    andThen(function () {\n      assert.equal(currentURL(), '/customized');\n      assert.ok($('body').offset().top < 10, 'Body is scrolled to top');\n    });\n\n    click('.third-link');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/customized?custom=third');\n    });\n\n    click('.second-link');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/customized?custom=second');\n    });\n  });\n});","define('dummy/tests/acceptance/index-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/index-test.js should pass jscs', function () {\n    ok(true, 'acceptance/index-test.js should pass jscs.');\n  });\n});","define('dummy/tests/acceptance/index-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/index-test.js should pass jshint.');\n  });\n});","define('dummy/tests/app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('app.js should pass jscs', function () {\n    ok(true, 'app.js should pass jscs.');\n  });\n});","define('dummy/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('dummy/tests/components/customized-page.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/customized-page.js should pass jscs', function () {\n    ok(true, 'components/customized-page.js should pass jscs.');\n  });\n});","define('dummy/tests/components/customized-page.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/customized-page.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/customized-page.js should pass jshint.');\n  });\n});","define('dummy/tests/components/index-page.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/index-page.js should pass jscs', function () {\n    ok(true, 'components/index-page.js should pass jscs.');\n  });\n});","define('dummy/tests/components/index-page.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/index-page.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/index-page.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/customized.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/customized.js should pass jscs', function () {\n    ok(true, 'controllers/customized.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/customized.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/customized.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/customized.js should pass jshint.');\n  });\n});","define('dummy/tests/controllers/index.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/index.js should pass jscs', function () {\n    ok(true, 'controllers/index.js should pass jscs.');\n  });\n});","define('dummy/tests/controllers/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/index.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('dummy/tests/helpers/destroy-app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/destroy-app.js should pass jscs', function () {\n    ok(true, 'helpers/destroy-app.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'dummy/tests/helpers/start-app', 'dummy/tests/helpers/destroy-app'], function (exports, _qunit, _dummyTestsHelpersStartApp, _dummyTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _dummyTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(options, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        (0, _dummyTestsHelpersDestroyApp['default'])(this.application);\n\n        if (options.afterEach) {\n          options.afterEach.apply(options, arguments);\n        }\n      }\n    });\n  };\n});","define('dummy/tests/helpers/module-for-acceptance.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/module-for-acceptance.js should pass jscs', function () {\n    ok(true, 'helpers/module-for-acceptance.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/resolver', ['exports', 'dummy/resolver', 'dummy/config/environment'], function (exports, _dummyResolver, _dummyConfigEnvironment) {\n\n  var resolver = _dummyResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _dummyConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _dummyConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('dummy/tests/helpers/resolver.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/resolver.js should pass jscs', function () {\n    ok(true, 'helpers/resolver.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/config/environment'], function (exports, _ember, _dummyApp, _dummyConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = (_ember['default'].assign || _ember['default'].merge)({}, _dummyConfigEnvironment['default'].APP);\n    attributes = (_ember['default'].assign || _ember['default'].merge)(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _dummyApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('dummy/tests/helpers/start-app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/start-app.js should pass jscs', function () {\n    ok(true, 'helpers/start-app.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/ember-anchor-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('ember-anchor', 'Integration | Component | ember anchor', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks,\n              content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n\n          if (this.cachedFragment) {\n            dom.repairClonedNode(fragment, [0, 1]);\n          }\n\n          var morph0 = dom.createMorphAt(fragment, 0, 1, contextualElement);\n          content(env, morph0, context, 'ember-anchor');\n          return fragment;\n        }\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n  });\n});","define('dummy/tests/integration/components/ember-anchor-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - integration/components');\n  test('integration/components/ember-anchor-test.js should pass jscs', function () {\n    ok(true, 'integration/components/ember-anchor-test.js should pass jscs.');\n  });\n});","define('dummy/tests/integration/components/ember-anchor-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/ember-anchor-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/ember-anchor-test.js should pass jshint.');\n  });\n});","define('dummy/tests/resolver.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('resolver.js should pass jscs', function () {\n    ok(true, 'resolver.js should pass jscs.');\n  });\n});","define('dummy/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('dummy/tests/router.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('router.js should pass jscs', function () {\n    ok(true, 'router.js should pass jscs.');\n  });\n});","define('dummy/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('dummy/tests/test-helper', ['exports', 'dummy/tests/helpers/resolver', 'ember-qunit'], function (exports, _dummyTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_dummyTestsHelpersResolver['default']);\n});","define('dummy/tests/test-helper.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('test-helper.js should pass jscs', function () {\n    ok(true, 'test-helper.js should pass jscs.');\n  });\n});","define('dummy/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/initializers/ember-anchor-test', ['exports', 'ember', 'dummy/initializers/ember-anchor', 'qunit'], function (exports, _ember, _dummyInitializersEmberAnchor, _qunit) {\n\n  var registry = undefined,\n      application = undefined;\n\n  (0, _qunit.module)('Unit | Initializer | ember anchor', {\n    beforeEach: function beforeEach() {\n      _ember['default'].run(function () {\n        application = _ember['default'].Application.create();\n        registry = application.registry;\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    (0, _dummyInitializersEmberAnchor.initialize)(registry, application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('dummy/tests/unit/initializers/ember-anchor-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/initializers');\n  test('unit/initializers/ember-anchor-test.js should pass jscs', function () {\n    ok(true, 'unit/initializers/ember-anchor-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/initializers/ember-anchor-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/initializers/ember-anchor-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/initializers/ember-anchor-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}